<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="984px" height="764px" viewBox="-0.5 -0.5 984 764" class="ge-export-svg-auto" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2024-07-18T14:22:44.186Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0&quot; etag=&quot;UF8JfzQMrwJpCyH_YYn5&quot; version=&quot;23.1.4&quot; type=&quot;device&quot; scale=&quot;1&quot; border=&quot;0&quot;&gt;&#xA;  &lt;diagram name=&quot;Page-1&quot; id=&quot;IR8NvncFz4PscZDNXcu1&quot;&gt;&#xA;    &lt;mxGraphModel dx=&quot;1509&quot; dy=&quot;785&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;0&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;1100&quot; pageHeight=&quot;850&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#xA;      &lt;root&gt;&#xA;        &lt;mxCell id=&quot;0&quot; /&gt;&#xA;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-53&quot; value=&quot;template&amp;amp;lt;Endian&amp;amp;gt; class Serializer&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;align=left;spacingLeft=10;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;110&quot; y=&quot;160&quot; width=&quot;220&quot; height=&quot;200&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-49&quot; value=&quot;level 3&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;dashed=1;dashPattern=8 8;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;400&quot; y=&quot;360&quot; width=&quot;240&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-47&quot; value=&quot;level 1&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;dashed=1;dashPattern=8 8;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;680&quot; y=&quot;120&quot; width=&quot;240&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-46&quot; value=&quot;level 2&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;dashed=1;dashPattern=8 8;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;400&quot; y=&quot;120&quot; width=&quot;240&quot; height=&quot;200&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-1&quot; value=&quot;SerializerBase&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;160&quot; y=&quot;80&quot; width=&quot;120&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-3&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-53&quot; target=&quot;Ifg5TH_750anEWT2D9S4-1&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;180&quot; y=&quot;160&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-6&quot; value=&quot;arithmetic / builtin types&amp;lt;br&amp;gt;(u)int8/16/32/64, float, bool, char&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;700&quot; y=&quot;160&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-7&quot; value=&quot;Enum types&amp;lt;br&amp;gt;using std::underlying_type&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;700&quot; y=&quot;200&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-43&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-8&quot; target=&quot;Ifg5TH_750anEWT2D9S4-47&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;680&quot; y=&quot;220&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-8&quot; value=&quot;Fixed-size arrays&amp;lt;br&amp;gt;std::array, T array[N]&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;420&quot; y=&quot;220&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-44&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-9&quot; target=&quot;Ifg5TH_750anEWT2D9S4-47&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-9&quot; value=&quot;Runtime-size arrays&amp;lt;br&amp;gt;std::vector, std::span, ptr+size&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;420&quot; y=&quot;260&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-38&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-11&quot; target=&quot;Ifg5TH_750anEWT2D9S4-47&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-11&quot; value=&quot;std::tuple, multiple parameters&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;420&quot; y=&quot;160&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-73&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;curved=1;dashed=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-12&quot; target=&quot;Ifg5TH_750anEWT2D9S4-74&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;1070&quot; y=&quot;550&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;1020&quot; y=&quot;260&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;1020&quot; y=&quot;750&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;670&quot; y=&quot;750&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;670&quot; y=&quot;610&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-12&quot; value=&quot;Class types&amp;lt;br&amp;gt;if class has insert,extract members&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;700&quot; y=&quot;240&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-52&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-13&quot; target=&quot;Ifg5TH_750anEWT2D9S4-53&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;370&quot; y=&quot;409.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-13&quot; value=&quot;&amp;lt;b&amp;gt;raw buffer helpers&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;insert(T, buffer, size)&amp;lt;br&amp;gt;extract(T, buffer, size)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;420&quot; y=&quot;400&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-14&quot; value=&quot;extract and return value&amp;lt;br&amp;gt;optional&amp;amp;lt;T&amp;amp;gt; extract(serializer)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;120&quot; y=&quot;280&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-45&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-15&quot; target=&quot;Ifg5TH_750anEWT2D9S4-46&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;420&quot; y=&quot;220&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-15&quot; value=&quot;serializer insert/extract member fns&amp;lt;br&amp;gt;Redirects to non-member functions&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;120&quot; y=&quot;200&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-16&quot; value=&quot;serializer extract_count member fn&amp;lt;br&amp;gt;Gets an integer with maximum limit&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;120&quot; y=&quot;240&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-35&quot; value=&quot;&quot; style=&quot;endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=1;curved=0;fontStyle=0&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;60&quot; y=&quot;320&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;60&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;60&quot; y=&quot;40&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;1040&quot; y=&quot;40&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;1040&quot; y=&quot;760&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;640&quot; y=&quot;760&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;640&quot; y=&quot;500&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;60&quot; y=&quot;500&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-36&quot; value=&quot;namespace microstrain&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=14;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;250&quot; y=&quot;40&quot; width=&quot;170&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-59&quot; value=&quot;&quot; style=&quot;group&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;700&quot; y=&quot;380&quot; width=&quot;260&quot; height=&quot;320&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-32&quot; value=&quot;namespace serialization&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;dashed=1;align=left;verticalAlign=top;arcSize=6;spacingLeft=10;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;260&quot; height=&quot;320&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-34&quot; value=&quot;&amp;lt;div align=&amp;quot;center&amp;quot;&amp;gt;namespace little_endian&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;dashed=1;align=left;verticalAlign=top;arcSize=6;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;20&quot; y=&quot;220&quot; width=&quot;220&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-33&quot; value=&quot;namespace big_endian&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;dashed=1;align=center;verticalAlign=top;arcSize=6;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;20&quot; y=&quot;120&quot; width=&quot;220&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-20&quot; value=&quot;write&amp;amp;lt;Endian&amp;amp;gt;(buffer, T)&amp;lt;br&amp;gt;read&amp;amp;lt;Endian&amp;amp;gt;(buffer, T)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;30&quot; y=&quot;40&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-17&quot; value=&quot;write(uint8_t* buffer, T value)&amp;lt;br&amp;gt;read(const uint8_t* buffer, T&amp;amp;amp; value)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;30&quot; y=&quot;150&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-19&quot; value=&quot;write(uint8_t* buffer, T value)&amp;lt;br&amp;gt;read(const uint8_t* buffer, T&amp;amp;amp; value)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;align=left;&quot; vertex=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;30&quot; y=&quot;250&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-57&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=0.086;entryY=-0.032;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot; source=&quot;Ifg5TH_750anEWT2D9S4-20&quot; target=&quot;Ifg5TH_750anEWT2D9S4-17&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;80&quot; y=&quot;100&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;47&quot; y=&quot;100&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-58&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;Ifg5TH_750anEWT2D9S4-59&quot; source=&quot;Ifg5TH_750anEWT2D9S4-20&quot; target=&quot;Ifg5TH_750anEWT2D9S4-19&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;180&quot; y=&quot;100&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;250&quot; y=&quot;100&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;250&quot; y=&quot;270&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-60&quot; value=&quot;&quot; style=&quot;endArrow=none;dashed=1;html=1;rounded=1;curved=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;790&quot; y=&quot;340&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;790&quot; y=&quot;340&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;660&quot; y=&quot;340&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;660&quot; y=&quot;480&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;380&quot; y=&quot;480&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;380&quot; y=&quot;80&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;960&quot; y=&quot;80&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;960&quot; y=&quot;340&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-61&quot; value=&quot;microstrain:: insert/extract non-member functions&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=14;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;480&quot; y=&quot;80&quot; width=&quot;330&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-64&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-7&quot; target=&quot;Ifg5TH_750anEWT2D9S4-20&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;1020&quot; y=&quot;390&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;940&quot; y=&quot;220&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;940&quot; y=&quot;360&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;880&quot; y=&quot;360&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-63&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-6&quot; target=&quot;Ifg5TH_750anEWT2D9S4-20&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;940&quot; y=&quot;180&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;940&quot; y=&quot;360&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;880&quot; y=&quot;360&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-67&quot; value=&quot;mip namespace&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=14;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;265&quot; y=&quot;520&quot; width=&quot;120&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-69&quot; value=&quot;&quot; style=&quot;endArrow=none;dashed=1;html=1;strokeWidth=2;rounded=1;curved=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;60&quot; y=&quot;620&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;60&quot; y=&quot;620&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;60&quot; y=&quot;800&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;620&quot; y=&quot;800&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;620&quot; y=&quot;520&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;60&quot; y=&quot;520&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-70&quot; value=&quot;template&amp;amp;lt;class T&amp;amp;gt;&amp;lt;br&amp;gt;insert(Serializer, Bitfield&amp;amp;lt;T&amp;amp;gt;)&amp;lt;br&amp;gt;extract(Serializer, Bitfield&amp;amp;lt;T&amp;amp;gt;)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;120&quot; y=&quot;660&quot; width=&quot;200&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-71&quot; value=&quot;DescriptorRate::&amp;lt;br&amp;gt;insert, extract&amp;lt;br&amp;gt;&amp;lt;i&amp;gt;Called from ms::insert(class)&amp;lt;br&amp;gt;&amp;lt;/i&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;120&quot; y=&quot;580&quot; width=&quot;200&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-72&quot; value=&quot;insert(Serializer, Vector&amp;amp;lt;T,N&amp;amp;gt;)&amp;lt;br&amp;gt;extract(Serializer, vector&amp;amp;lt;T,N&amp;amp;gt;)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;360&quot; y=&quot;660&quot; width=&quot;200&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-75&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;dashed=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;Ifg5TH_750anEWT2D9S4-74&quot; target=&quot;Ifg5TH_750anEWT2D9S4-71&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-74&quot; value=&quot;mip field classes &amp;amp;amp; structs&amp;lt;br&amp;gt;insert, extract member functions&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;360&quot; y=&quot;580&quot; width=&quot;200&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;Ifg5TH_750anEWT2D9S4-76&quot; value=&quot;Non-member functions in the mip namespace are found via argument-dependent lookup (ADL)&amp;lt;br&amp;gt;See https://en.cppreference.com/w/cpp/language/adl&amp;lt;br&amp;gt;&amp;lt;i&amp;gt;(use &amp;quot;&amp;lt;/i&amp;gt;using microstrain::insert&amp;lt;i&amp;gt;&amp;quot; and then call just &amp;quot;&amp;lt;/i&amp;gt;insert&amp;lt;i&amp;gt;&amp;quot;&amp;lt;br&amp;gt;&amp;amp;nbsp;to include mip::insert when the type is in the mip namespace)&amp;lt;br&amp;gt;&amp;lt;/i&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;80&quot; y=&quot;718&quot; width=&quot;510&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;      &lt;/root&gt;&#xA;    &lt;/mxGraphModel&gt;&#xA;  &lt;/diagram&gt;&#xA;&lt;/mxfile&gt;&#xA;"><defs><style type="text/css">@media (prefers-color-scheme: dark) {&#xa;svg.ge-export-svg-auto { filter: invert(100%) hue-rotate(180deg); }&#xa;svg.ge-export-svg-auto foreignObject img,&#xa;svg.ge-export-svg-auto image:not(svg.ge-export-svg-auto switch image),&#xa;svg.ge-export-svg-auto svg { filter: invert(100%) hue-rotate(180deg) }&#xa;svg.ge-export-svg-auto { background-color: #000000 !important; }&#xa;}</style></defs><rect fill="#ffffff" width="100%" height="100%" x="0" y="0"/><g><rect x="51" y="121" width="220" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 208px; height: 1px; padding-top: 128px; margin-left: 63px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">template&lt;Endian&gt; class Serializer</div></div></div></foreignObject><text x="63" y="140" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">template&lt;Endian&gt; class Serializer</text></switch></g><rect x="341" y="321" width="240" height="100" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="7.999999999999999 7.999999999999999" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 328px; margin-left: 342px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">level 3</div></div></div></foreignObject><text x="461" y="340" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">level 3</text></switch></g><rect x="621" y="81" width="240" height="190" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="7.999999999999999 7.999999999999999" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 88px; margin-left: 622px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">level 1</div></div></div></foreignObject><text x="741" y="100" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">level 1</text></switch></g><rect x="341" y="81" width="240" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="7.999999999999999 7.999999999999999" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 88px; margin-left: 342px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">level 2</div></div></div></foreignObject><text x="461" y="100" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">level 2</text></switch></g><rect x="101" y="41" width="120" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 61px; margin-left: 102px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">SerializerBase</div></div></div></foreignObject><text x="161" y="65" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">SerializerBase</text></switch></g><path d="M 161 121 L 161 87.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 161 82.12 L 164.5 89.12 L 161 87.37 L 157.5 89.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="641" y="121" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 141px; margin-left: 642px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">arithmetic / builtin types<br />(u)int8/16/32/64, float, bool, char</div></div></div></foreignObject><text x="741" y="145" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">arithmetic / builtin types...</text></switch></g><rect x="641" y="161" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 181px; margin-left: 642px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Enum types<br />using std::underlying_type</div></div></div></foreignObject><text x="741" y="185" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Enum types...</text></switch></g><path d="M 561 201 L 590.95 201.05 L 590.95 176 L 614.63 176" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 619.88 176 L 612.88 179.5 L 614.63 176 L 612.88 172.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="361" y="181" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 201px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Fixed-size arrays<br />std::array, T array[N]</div></div></div></foreignObject><text x="461" y="205" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Fixed-size arrays...</text></switch></g><path d="M 561 241 L 590.95 241.05 L 590.95 176 L 614.63 176" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 619.88 176 L 612.88 179.5 L 614.63 176 L 612.88 172.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="361" y="221" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 241px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Runtime-size arrays<br />std::vector, std::span, ptr+size</div></div></div></foreignObject><text x="461" y="245" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Runtime-size arrays...</text></switch></g><path d="M 561 141 L 590.95 141.05 L 590.95 176 L 614.63 176" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 619.88 176 L 612.88 179.5 L 614.63 176 L 612.88 172.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="361" y="121" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 141px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">std::tuple, multiple parameters</div></div></div></foreignObject><text x="461" y="145" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">std::tuple, multiple parameters</text></switch></g><path d="M 841 221 Q 960.95 221.05 960.95 466.05 Q 960.95 711.05 785.95 711.05 Q 610.95 711.05 610.95 641.05 Q 610.95 571.05 507.37 571" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="stroke"/><path d="M 502.12 571 L 509.12 567.5 L 507.37 571 L 509.12 574.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="641" y="201" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 221px; margin-left: 642px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Class types<br />if class has insert,extract members</div></div></div></foreignObject><text x="741" y="225" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Class types...</text></switch></g><path d="M 361 381 L 161.05 381.05 L 161.01 327.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 161 322.12 L 164.51 329.11 L 161.01 327.37 L 157.51 329.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="361" y="361" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 381px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><b>raw buffer helpers</b><br />insert(T, buffer, size)<br />extract(T, buffer, size)</div></div></div></foreignObject><text x="461" y="385" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">raw buffer helpers...</text></switch></g><rect x="61" y="241" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 261px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">extract and return value<br />optional&lt;T&gt; extract(serializer)</div></div></div></foreignObject><text x="161" y="265" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">extract and return value...</text></switch></g><path d="M 261 181 L 334.63 181" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 339.88 181 L 332.88 184.5 L 334.63 181 L 332.88 177.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="61" y="161" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 181px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">serializer insert/extract member fns<br />Redirects to non-member functions</div></div></div></foreignObject><text x="161" y="185" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">serializer insert/extract member...</text></switch></g><rect x="61" y="201" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 221px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">serializer extract_count member fn<br />Gets an integer with maximum limit</div></div></div></foreignObject><text x="161" y="225" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">serializer extract_count member f...</text></switch></g><path d="M 1 281 L 1 11 Q 1 1 11 1 L 971 1 Q 981 1 981 11 L 981 711 Q 981 721 971 721 L 591 721 Q 581 721 581 711 L 581 471 Q 581 461 571 461 L 11 461 Q 1 461 1 451 L 1 281" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="5.999999999999999 5.999999999999999" pointer-events="stroke"/><rect x="191" y="1" width="170" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 16px; margin-left: 276px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">namespace microstrain</div></div></div></foreignObject><text x="276" y="20" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px" text-anchor="middle">namespace microstrain</text></switch></g><rect x="641" y="341" width="260" height="320" rx="15.6" ry="15.6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 248px; height: 1px; padding-top: 348px; margin-left: 653px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">namespace serialization</div></div></div></foreignObject><text x="653" y="360" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">namespace serialization</text></switch></g><rect x="661" y="561" width="220" height="80" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 218px; height: 1px; padding-top: 568px; margin-left: 663px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div align="center">namespace little_endian<br /></div></div></div></div></foreignObject><text x="663" y="580" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">namespace little_endian&#xa;</text></switch></g><rect x="661" y="461" width="220" height="80" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 218px; height: 1px; padding-top: 468px; margin-left: 662px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">namespace big_endian</div></div></div></foreignObject><text x="771" y="480" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">namespace big_endian</text></switch></g><rect x="671" y="381" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 401px; margin-left: 672px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">write&lt;Endian&gt;(buffer, T)<br />read&lt;Endian&gt;(buffer, T)</div></div></div></foreignObject><text x="771" y="405" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">write&lt;Endian&gt;(buffer, T)...</text></switch></g><rect x="671" y="491" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 198px; height: 1px; padding-top: 511px; margin-left: 673px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">write(uint8_t* buffer, T value)<br />read(const uint8_t* buffer, T&amp; value)</div></div></div></foreignObject><text x="673" y="515" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">write(uint8_t* buffer, T value)...</text></switch></g><rect x="671" y="591" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 198px; height: 1px; padding-top: 611px; margin-left: 673px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">write(uint8_t* buffer, T value)<br />read(const uint8_t* buffer, T&amp; value)</div></div></div></foreignObject><text x="673" y="615" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">write(uint8_t* buffer, T value)...</text></switch></g><path d="M 721 421 L 720.95 441.05 L 688.21 441.05 L 688.2 483.35" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 688.2 488.6 L 684.7 481.6 L 688.2 483.35 L 691.7 481.6 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 821 421 L 820.95 441.05 L 890.95 441.05 L 890.95 611.05 L 877.37 611.02" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 872.12 611 L 879.13 607.52 L 877.37 611.02 L 879.11 614.52 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 731 301 L 611 301 Q 601 301 601 311 L 601 431 Q 601 441 591 441 L 331 441 Q 321 441 321 431 L 321 51 Q 321 41 331 41 L 891 41 Q 901 41 901 51 L 901 291 Q 901 301 891 301 L 731 301" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="stroke"/><rect x="421" y="41" width="330" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 56px; margin-left: 586px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">microstrain:: insert/extract non-member functions</div></div></div></foreignObject><text x="586" y="60" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px" text-anchor="middle">microstrain:: insert/extract non-member functio...</text></switch></g><path d="M 841 181 L 880.95 181.05 L 880.95 321.05 L 820.95 321.05 L 820.99 374.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 821 379.88 L 817.49 372.89 L 820.99 374.63 L 824.49 372.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 841 141 L 880.95 141.05 L 880.95 321.05 L 820.95 321.05 L 820.99 374.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 821 379.88 L 817.49 372.89 L 820.99 374.63 L 824.49 372.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="206" y="481" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 496px; margin-left: 266px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">mip namespace</div></div></div></foreignObject><text x="266" y="500" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px" text-anchor="middle">mip namespace</text></switch></g><path d="M 1 581 L 1 751 Q 1 761 11 761 L 551 761 Q 561 761 561 751 L 561 491 Q 561 481 551 481 L 11 481 Q 1 481 1 491 L 1 581" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="5.999999999999999 5.999999999999999" pointer-events="stroke"/><rect x="61" y="621" width="200" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 651px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">template&lt;class T&gt;<br />insert(Serializer, Bitfield&lt;T&gt;)<br />extract(Serializer, Bitfield&lt;T&gt;)</div></div></div></foreignObject><text x="161" y="655" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">template&lt;class T&gt;...</text></switch></g><rect x="61" y="541" width="200" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 571px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">DescriptorRate::<br />insert, extract<br /><i>Called from ms::insert(class)<br /></i></div></div></div></foreignObject><text x="161" y="575" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">DescriptorRate::...</text></switch></g><rect x="301" y="621" width="200" height="40" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 641px; margin-left: 302px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">insert(Serializer, Vector&lt;T,N&gt;)<br />extract(Serializer, vector&lt;T,N&gt;)</div></div></div></foreignObject><text x="401" y="645" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">insert(Serializer, Vector&lt;T,N&gt;)...</text></switch></g><path d="M 301 571 L 267.37 571" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="2.9999999999999996 2.9999999999999996" pointer-events="stroke"/><path d="M 262.12 571 L 269.12 567.5 L 267.37 571 L 269.12 574.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="301" y="541" width="200" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 571px; margin-left: 302px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">mip field classes &amp; structs<br />insert, extract member functions</div></div></div></foreignObject><text x="401" y="575" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">mip field classes &amp; structs...</text></switch></g><rect x="21" y="679" width="510" height="70" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 714px; margin-left: 276px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Non-member functions in the mip namespace are found via argument-dependent lookup (ADL)<br />See https://en.cppreference.com/w/cpp/language/adl<br /><i>(use "</i>using microstrain::insert<i>" and then call just "</i>insert<i>"<br /> to include mip::insert when the type is in the mip namespace)<br /></i></div></div></div></foreignObject><text x="276" y="718" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Non-member functions in the mip namespace are found via argument-dependent lookup (AD...</text></switch></g></g></svg>